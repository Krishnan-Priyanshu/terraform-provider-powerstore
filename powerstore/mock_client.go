// Code generated by MockGen. DO NOT EDIT.
// Source: powerstore/client.go

// Package powerstore is a generated GoMock package.
package powerstore

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockClientInterface is a mock of ClientInterface interface
type MockClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockClientInterfaceMockRecorder
}

// MockClientInterfaceMockRecorder is the mock recorder for MockClientInterface
type MockClientInterfaceMockRecorder struct {
	mock *MockClientInterface
}

// NewMockClientInterface creates a new mock instance
func NewMockClientInterface(ctrl *gomock.Controller) *MockClientInterface {
	mock := &MockClientInterface{ctrl: ctrl}
	mock.recorder = &MockClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockClientInterface) EXPECT() *MockClientInterfaceMockRecorder {
	return m.recorder
}

// doRequest mocks base method
func (m *MockClientInterface) doRequest(reqType, url, requestBody string) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "doRequest", reqType, url, requestBody)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// doRequest indicates an expected call of doRequest
func (mr *MockClientInterfaceMockRecorder) doRequest(reqType, url, requestBody interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "doRequest", reflect.TypeOf((*MockClientInterface)(nil).doRequest), reqType, url, requestBody)
}
